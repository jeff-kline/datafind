#!/usr/bin/python
# -*- Python -*-

from optparse import OptionParser
from diskcache import *
CMD_LIST=["expand", "raw", "raw-pruned"]

usage = "usage: %prog FILE_LIST [options]"
description = "Find data using diskcache"
version = "%prog 0.1"

parser = OptionParser(usage, version=version, description=description)

# yes, the interval is intended to be the open interval. The interior of the 
# intervals in question needs to be nonempty.
parser.add_option("-m", "--gps-min", help="[default: None] Smallest second "
                  "of interest.  Frames intersecting the open interval "
                  "(GPS_MIN,GPS_MIN+1) are included.",
                  default=None, type="int")

parser.add_option("-M", "--gps-max", help="[default: None] Largest second "
                  "of interest.  Frames intersecting the open interval "
                  "(GPS_MAX,GPS_MAX+1) are included.",
                  default=None, type="int")

parser.add_option("-r", "--regexp", help="[default: ''] include "
                  "only lines from files in FILE_LIST matching regular "
                  "expression", default='')

parser.add_option("-c", "--command", help="[default: expand] valid "
                  "values are %s. See manpage for details." % ", ".join(CMD_LIST), 
                  default="expand", choices=CMD_LIST)

(opts, args) = parser.parse_args()

for f in args:
    dc = DiskCacheFile(f, minimum_gps=opts.gps_min,
                       maximum_gps=opts.gps_max, regexp=opts.regexp)
    if opts.command == "expand":
        for f in dc.expand():
            print f
    elif opts.command == "raw":
        for d in dc:
            print d
    elif opts.command == "raw-pruned":
        for d in dc:
            if d["segmentlist"]:
                print d
    else:
        raise ProgrammingError("Unknown type")
